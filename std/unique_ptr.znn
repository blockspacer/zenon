
export embed {
#include <memory>
using std::unique_ptr;
}


export template <T>
extern struct unique_ptr;

export template <T>
unique_ptr<T> make_unique(T t) {
  embed {
    return std::make_unique<T>(std::move(t));
  }
}

export template <T>
T mutable* operator * (unique_ptr<T>* ptr) {
  embed {
    return ptr->get();
  }
}

